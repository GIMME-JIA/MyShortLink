# ShardingSphere分库分表配置文件：生产环境prod

# 数据源集合
dataSources:
  mysql:  # 可以自定义名称，表示数据源
    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
    driverClassName: com.mysql.cj.jdbc.Driver
    jdbcUrl: jdbc:mysql://127.0.0.1:3306/mylink_database?useUnicode=true&characterEncoding=UTF-8&rewriteBatchedStatements=true&allowMultiQueries=true&serverTimezone=Asia/Shanghai
    username: root
    password: Ljf20031227 # 数据库密码


rules:
  - !SHARDING
    tables:
      t_link:
        # 真实数据节点，比如数据库源以及数据库在数据库中真实存在的
        actualDataNodes: mysql.t_link_${0..15}    # mysql是上面自定义的名称，表示数据源是mysql，匹配就行
        # 分表策略
        tableStrategy:
          # 用于单分片键的标准分片场景
          standard:
            # 分片键
            shardingColumn: gid
            # 分片算法，对应 rules[0].shardingAlgorithms
            shardingAlgorithmName: link_table_hash_mod

      t_link_goto:
        # 真实数据节点，比如数据库源以及数据库在数据库中真实存在的
        actualDataNodes: mysql.t_link_goto_${0..15}    # mysql是上面自定义的名称，表示数据源是mysql，匹配就行
        # 分表策略
        tableStrategy:
          # 用于单分片键的标准分片场景
          standard:
            # 分片键
            shardingColumn: full_short_url
            # 分片算法，对应 rules[0].shardingAlgorithms
            shardingAlgorithmName: link_goto_table_hash_mod

      t_link_stats_today:
        actualDataNodes: mysql.t_link_stats_today_${0..15}
        tableStrategy:
          standard:
            shardingColumn: gid
            shardingAlgorithmName: link_stats_today_hash_mod

    # 绑定表：分片键要相同
    bindingTables:
      - t_link, t_link_stats_today


    # 分片算法
    shardingAlgorithms:
      link_table_hash_mod:
        # 根据分片键 Hash 分片
        type: HASH_MOD
        # 分片数量
        props:
          sharding-count: 16

      link_goto_table_hash_mod:
        # 根据分片键 Hash 分片
        type: HASH_MOD
        # 分片数量
        props:
          sharding-count: 16

      link_stats_today_hash_mod:
        # 根据分片键 Hash 分片
        type: HASH_MOD
        # 分片数量
        props:
          sharding-count: 16


# 展现逻辑 SQL & 真实 SQL
props:
  sql-show: true



